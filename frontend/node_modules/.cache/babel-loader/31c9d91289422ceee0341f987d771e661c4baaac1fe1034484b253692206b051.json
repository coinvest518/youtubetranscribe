{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mildh\\\\youtube-audio-extractor\\\\frontend\\\\src\\\\components\\\\DownloadForm.js\",\n  _s = $RefreshSig$();\n// src/components/DownloadForm.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadForm = () => {\n  _s();\n  const [youtubeUrl, setYoutubeUrl] = useState('');\n  const [message, setMessage] = useState('');\n  const handleDownload = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/download', {\n        youtube_url: youtubeUrl\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      // Check if the error response exists\n      if (error.response) {\n        setMessage(`Error: ${error.response.data.error}`);\n      } else {\n        setMessage('Error: Unable to reach the server.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleDownload,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: youtubeUrl,\n      onChange: e => setYoutubeUrl(e.target.value),\n      placeholder: \"Enter YouTube URL\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Download Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(DownloadForm, \"c2nuoIDDR/m8dr50EPlc/gV6Ucw=\");\n_c = DownloadForm;\nexport default DownloadForm;\nvar _c;\n$RefreshReg$(_c, \"DownloadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DownloadForm","_s","youtubeUrl","setYoutubeUrl","message","setMessage","handleDownload","e","preventDefault","response","post","youtube_url","data","error","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mildh/youtube-audio-extractor/frontend/src/components/DownloadForm.js"],"sourcesContent":["// src/components/DownloadForm.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DownloadForm = () => {\r\n  const [youtubeUrl, setYoutubeUrl] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleDownload = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:5000/download', {\r\n        youtube_url: youtubeUrl,\r\n      });\r\n\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      // Check if the error response exists\r\n      if (error.response) {\r\n        setMessage(`Error: ${error.response.data.error}`);\r\n      } else {\r\n        setMessage('Error: Unable to reach the server.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleDownload}>\r\n      <input \r\n        type=\"text\" \r\n        value={youtubeUrl} \r\n        onChange={(e) => setYoutubeUrl(e.target.value)} \r\n        placeholder=\"Enter YouTube URL\" \r\n        required \r\n      />\r\n      <button type=\"submit\">Download Audio</button>\r\n      {message && <p>{message}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DownloadForm;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,gCAAgC,EAAE;QAClEC,WAAW,EAAET;MACf,CAAC,CAAC;MAEFG,UAAU,CAACI,QAAQ,CAACG,IAAI,CAACR,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACd;MACA,IAAIA,KAAK,CAACJ,QAAQ,EAAE;QAClBJ,UAAU,CAAC,UAAUQ,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACC,KAAK,EAAE,CAAC;MACnD,CAAC,MAAM;QACLR,UAAU,CAAC,oCAAoC,CAAC;MAClD;IACF;EACF,CAAC;EAED,oBACEN,OAAA;IAAMe,QAAQ,EAAER,cAAe;IAAAS,QAAA,gBAC7BhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,UAAW;MAClBgB,QAAQ,EAAGX,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;MAC/CG,WAAW,EAAC,mBAAmB;MAC/BC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF1B,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5CrB,OAAO,iBAAIL,OAAA;MAAAgB,QAAA,EAAIX;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEX,CAAC;AAACxB,EAAA,CApCID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}