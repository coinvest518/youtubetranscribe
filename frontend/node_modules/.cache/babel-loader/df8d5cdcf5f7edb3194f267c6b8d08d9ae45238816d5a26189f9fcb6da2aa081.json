{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mildh\\\\youtube-audio-extractor\\\\frontend\\\\src\\\\components\\\\DownloadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadForm = () => {\n  _s();\n  const [youtubeUrl, setYoutubeUrl] = useState('');\n  const [message, setMessage] = useState(''); // Define state for messages\n\n  const handleDownload = async () => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/download', {\n        youtube_url: youtubeUrl\n      });\n      setMessage(response.data.message); // Use setMessage here\n    } catch (error) {\n      if (error.response) {\n        setMessage(error.response.data.error || 'An error occurred during download');\n      } else if (error.request) {\n        setMessage('No response received from the server');\n      } else {\n        setMessage('Error: ' + error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: youtubeUrl,\n      onChange: e => setYoutubeUrl(e.target.value),\n      placeholder: \"Enter YouTube URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      children: \"Download Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(DownloadForm, \"c2nuoIDDR/m8dr50EPlc/gV6Ucw=\");\n_c = DownloadForm;\nexport default DownloadForm;\nvar _c;\n$RefreshReg$(_c, \"DownloadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DownloadForm","_s","youtubeUrl","setYoutubeUrl","message","setMessage","handleDownload","response","post","youtube_url","data","error","request","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mildh/youtube-audio-extractor/frontend/src/components/DownloadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DownloadForm = () => {\r\n    const [youtubeUrl, setYoutubeUrl] = useState('');\r\n    const [message, setMessage] = useState(''); // Define state for messages\r\n\r\n    const handleDownload = async () => {\r\n        try {\r\n            const response = await axios.post('http://127.0.0.1:5000/download', {\r\n                youtube_url: youtubeUrl,\r\n            });\r\n            setMessage(response.data.message); // Use setMessage here\r\n        } catch (error) {\r\n            if (error.response) {\r\n                setMessage(error.response.data.error || 'An error occurred during download');\r\n            } else if (error.request) {\r\n                setMessage('No response received from the server');\r\n            } else {\r\n                setMessage('Error: ' + error.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                value={youtubeUrl}\r\n                onChange={(e) => setYoutubeUrl(e.target.value)}\r\n                placeholder=\"Enter YouTube URL\"\r\n            />\r\n            <button onClick={handleDownload}>Download Audio</button>\r\n            {message && <p>{message}</p>} {/* Display message here */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DownloadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,gCAAgC,EAAE;QAChEC,WAAW,EAAEP;MACjB,CAAC,CAAC;MACFG,UAAU,CAACE,QAAQ,CAACG,IAAI,CAACN,OAAO,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZ,IAAIA,KAAK,CAACJ,QAAQ,EAAE;QAChBF,UAAU,CAACM,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACC,KAAK,IAAI,mCAAmC,CAAC;MAChF,CAAC,MAAM,IAAIA,KAAK,CAACC,OAAO,EAAE;QACtBP,UAAU,CAAC,sCAAsC,CAAC;MACtD,CAAC,MAAM;QACHA,UAAU,CAAC,SAAS,GAAGM,KAAK,CAACP,OAAO,CAAC;MACzC;IACJ;EACJ,CAAC;EAED,oBACIL,OAAA;IAAAc,QAAA,gBACId,OAAA;MACIe,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,UAAW;MAClBc,QAAQ,EAAGC,CAAC,IAAKd,aAAa,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFxB,OAAA;MAAQyB,OAAO,EAAElB,cAAe;MAAAO,QAAA,EAAC;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvDnB,OAAO,iBAAIL,OAAA;MAAAc,QAAA,EAAIT;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEd,CAAC;AAACtB,EAAA,CAjCID,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}